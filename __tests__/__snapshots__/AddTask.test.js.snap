// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  style={
    Object {
      "alignContent": "center",
      "alignItems": "center",
      "backgroundColor": 0.8,
      "justifyContent": "center",
      "marginTop": 225,
    }
  }
  transparent={true}
  visible={true}
>
  <View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#F8F8F8",
            "borderBottomColor": "#a7a6ab",
            "borderBottomWidth": 0.5,
            "elevation": 3,
            "flexDirection": "row",
            "height": 64,
            "justifyContent": "center",
            "left": 0,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 15,
            "right": 0,
            "top": 0,
          },
          Object {
            "backgroundColor": "#000",
          },
        ]
      }
      virtual={undefined}
    >
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "alignSelf": "center",
            "flex": 1,
          }
        }
        virtual={undefined}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flex": 1,
          }
        }
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 17,
                "fontWeight": "600",
                "textAlign": "center",
              },
              Object {
                "color": "#fff",
              },
            ]
          }
          virtual={undefined}
        >
          Add Task
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "alignSelf": "center",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "flex-end",
          }
        }
        virtual={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": null,
              "backgroundColor": "transparent",
              "borderBottomWidth": null,
              "borderColor": null,
              "borderLeftWidth": null,
              "borderRadius": 50,
              "borderRightWidth": null,
              "borderTopWidth": null,
              "elevation": 0,
              "flexDirection": "row",
              "height": 45,
              "justifyContent": "space-between",
              "marginRight": -8,
              "opacity": 1,
              "paddingBottom": 6,
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 6,
              "shadowColor": null,
              "shadowOffset": null,
              "shadowOpacity": null,
              "shadowRadius": null,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            ÔêÜ
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={undefined}
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutoAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        },
        Object {
          "backgroundColor": "#00000099",
        },
      ]
    }
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignContent": "center",
            "alignItems": "center",
            "backgroundColor": 0.8,
            "borderBottomColor": "#fff",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginLeft": 2,
            "marginTop": 225,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          onEndEditing={[Function]}
          placeholder="click to add a new task"
          placeholderTextColor="#575757"
          style={
            Array [
              Object {
                "color": "#000",
                "flex": 1,
                "fontSize": 17,
                "height": 50,
                "lineHeight": 24,
                "paddingLeft": 5,
                "paddingRight": 5,
                "top": 1.5,
              },
              Object {
                "backgroundColor": "black",
                "borderColor": "gray",
                "borderWidth": 1,
                "color": "white",
                "height": 40,
              },
            ]
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
      </View>
    </View>
  </RCTScrollView>
</Modal>
`;
