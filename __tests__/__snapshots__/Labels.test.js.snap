// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {},
      Object {
        "marginTop": 22,
      },
    ]
  }
  virtual={undefined}
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={false}
    visible={false}
  >
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#F8F8F8",
              "borderBottomColor": "#a7a6ab",
              "borderBottomWidth": 0.5,
              "elevation": 3,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 15,
              "right": 0,
              "top": 0,
            },
            Object {
              "backgroundColor": undefined,
            },
          ]
        }
        virtual={undefined}
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "alignSelf": "center",
              "flex": 1,
            }
          }
          virtual={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": null,
                "backgroundColor": "transparent",
                "borderBottomWidth": null,
                "borderColor": null,
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "elevation": 0,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "marginLeft": -3,
                "opacity": 1,
                "paddingBottom": 6,
                "paddingLeft": 6,
                "paddingRight": 6,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={null}
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontSize": 30,
                    },
                    null,
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "color": "#fff",
                "paddingTop": 13,
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        >
          Label
        </Text>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "alignSelf": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "flex-end",
            }
          }
          virtual={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": null,
                "backgroundColor": "transparent",
                "borderBottomWidth": null,
                "borderColor": null,
                "borderLeftWidth": null,
                "borderRadius": 50,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "elevation": 0,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "marginRight": -8,
                "opacity": 1,
                "paddingBottom": 6,
                "paddingLeft": 15,
                "paddingRight": 15,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Entypo",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={undefined}
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutoAutomaticScroll={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="handled"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        }
      }
      viewIsInsideTabBar={false}
      virtual={undefined}
    >
      <View>
        <RCTScrollView
          automaticallyAdjustContentInsets={false}
          contentContainerStyle={undefined}
          contentInset={
            Object {
              "bottom": 0,
            }
          }
          enableAutoAutomaticScroll={true}
          enableResetScrollToCoords={true}
          extraHeight={75}
          extraScrollHeight={0}
          getScrollResponder={[Function]}
          handleOnScroll={[Function]}
          keyboardDismissMode="interactive"
          keyboardOpeningTime={250}
          keyboardShouldPersistTaps="handled"
          keyboardSpace={0}
          onScroll={[Function]}
          resetKeyboardSpace={[Function]}
          resetScrollToCoords={
            Object {
              "x": 0,
              "y": 0,
            }
          }
          scrollEventThrottle={1}
          scrollForExtraHeightOnAndroid={[Function]}
          scrollToEnd={[Function]}
          scrollToFocusedInput={[Function]}
          scrollToPosition={[Function]}
          showsVerticalScrollIndicator={true}
          style={
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            }
          }
          viewIsInsideTabBar={false}
          virtual={undefined}
        >
          <View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#EB5A46",
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 50,
                  "justifyContent": "flex-end",
                  "margin": 5,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingRight": 15,
                  "paddingTop": 6,
                  "width": 300,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            />
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#FFAB4A",
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 50,
                  "justifyContent": "flex-end",
                  "margin": 5,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingRight": 15,
                  "paddingTop": 6,
                  "width": 300,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            />
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#51E898",
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 50,
                  "justifyContent": "flex-end",
                  "margin": 5,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingRight": 15,
                  "paddingTop": 6,
                  "width": 300,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            />
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#F5DD29",
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 50,
                  "justifyContent": "flex-end",
                  "margin": 5,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingRight": 15,
                  "paddingTop": 6,
                  "width": 300,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            />
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#00C2E0",
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 50,
                  "justifyContent": "flex-end",
                  "margin": 5,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingRight": 15,
                  "paddingTop": 6,
                  "width": 300,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            />
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "stretch",
                  "backgroundColor": "#838C91",
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 50,
                  "justifyContent": "flex-end",
                  "margin": 5,
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingRight": 15,
                  "paddingTop": 6,
                  "width": 300,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            />
          </View>
        </RCTScrollView>
      </View>
    </RCTScrollView>
  </Modal>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
          Object {
            "alignItems": "center",
            "borderRadius": 3,
            "height": 25,
            "marginLeft": 10,
            "width": 225,
          },
          Object {
            "backgroundColor": undefined,
            "marginBottom": 20,
          },
        ]
      }
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontSize": 16,
            },
            Object {
              "color": "#fff",
              "justifyContent": "center",
              "paddingLeft": 10,
            },
          ]
        }
        uppercase={false}
        virtual={undefined}
      >
        Tap to change task color
      </Text>
    </View>
  </View>
</View>
`;
